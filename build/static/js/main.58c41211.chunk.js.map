{"version":3,"sources":["hooks/useWindowSize.tsx","components/Header/Header-styled.tsx","components/Header/Header.tsx","components/Welcome.tsx/MobileWelcome-style.tsx","components/Welcome.tsx/MobileWelcome.tsx","components/Welcome.tsx/Welcome-styles.tsx","components/Welcome.tsx/Welcome.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useWindowSize","useState","window","innerWidth","width","setWidth","resizeHandler","useEffect","addEventListener","removeEventListener","HeaderStyledFlex","styled","div","HeaderLeft","HeaderRight","Header","className","MobileViewContent","MobileWelcome","src","alt","type","style","height","transform","WelcomeRelative90vh","TopContentRelative","ContentFlexXbetween","Welcome","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58c41211.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useWindowSize = () => {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n  function resizeHandler() {\r\n    setWidth(window.innerWidth)\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener('resize', resizeHandler)\r\n    return () => window.removeEventListener('resize', resizeHandler)\r\n  }, [])\r\n  return width\r\n}\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const HeaderStyledFlex = styled.div<{ width: number }>`\r\n  background: #000000;\r\n  height: ${({ width }) => (width >= 992 ? '100px' : '50px')};\r\n  display: flex;\r\n  color: white;\r\n  align-items: center;\r\n  font-family: 'Nunito', sans-serif;\r\n`\r\n\r\nexport const HeaderLeft = styled.div<{ width: number }>`\r\n  margin-left: ${({ width }) => (width >= 992 ? '50px' : '20px')};\r\n  font-family: 'Comic Sans MS';\r\n  flex: 0.2;\r\n  white-space: nowrap;\r\n  margin-right: 10px;\r\n  .page {\r\n    font-family: 'Comic Sans MS';\r\n    font-size: ${({ width }) => (width >= 992 ? '30px' : '15px')};\r\n  }\r\n\r\n  .vol {\r\n    font-size: ${({ width }) => (width >= 992 ? '40px' : '20px')};\r\n    font-weight: bolder;\r\n  }\r\n`\r\n\r\nexport const HeaderRight = styled.div<{ width: number }>`\r\n  margin-right: 30px;\r\n  flex: 0.8;\r\n  justify-self: flex-start;\r\n  text-align: center;\r\n\r\n  .character {\r\n    font-size: ${({ width }) => (width >= 992 ? '25px' : '12px')};\r\n    white-space: nowrap;\r\n  }\r\n  .lorem {\r\n    margin-bottom: 5px;\r\n    font-size: ${({ width }) => (width >= 992 ? '25px' : width >= 786 ? '20px' : '10px')};\r\n    color: #ffff0f;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { useWindowSize } from '../../hooks/useWindowSize'\r\nimport { HeaderLeft, HeaderRight, HeaderStyledFlex } from './Header-styled'\r\n\r\nconst Header = () => {\r\n  const width = useWindowSize()\r\n\r\n  return (\r\n    <HeaderStyledFlex width={width}>\r\n      <HeaderLeft width={width}>\r\n        <h3 className=\"page\">15 pages</h3>\r\n        <h4 className=\"vol\">Vol.1</h4>\r\n      </HeaderLeft>\r\n\r\n      <HeaderRight width={width}>\r\n        <div>\r\n          <h2 className=\"character\">NEW CHARACTERS EVERY WEEK</h2>\r\n          <p className=\"lorem\">Solbit Heroes have landed! An exclusive 2D </p>\r\n        </div>\r\n      </HeaderRight>\r\n    </HeaderStyledFlex>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const MobileViewContent = styled.div<{ width: number }>`\r\n       background-image: url('/img/bb.png');\r\n        background-repeat: no-repeat;\r\n        background-size: 100%;\r\n        position: relative;\r\n\r\n        &::before{\r\n       background-image: url('/img/rb.png');\r\n        position: absolute;\r\n        content: '';\r\n        background-size: 80%;\r\n        background-repeat: no-repeat;\r\n        width: 100%;\r\n        height: 100%;\r\n        }\r\n\r\n .next-f \r\n    { \r\n      position: relative;\r\n       background: #FF1948;\r\n       padding: 4%;\r\n    }\r\n    .next-f{\r\n       background-image: url('/img/bb.png');\r\n        background-repeat: no-repeat;\r\n        background-size: 100%;\r\n    }\r\n  background-color: #25f2c8;\r\n  /* height: calc(100vh - 50px); */\r\n  .flexsb {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .main__content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n\r\n    .top__mobile {\r\n      overflow: hidden;\r\n      height: 60%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-bottom: 30px;\r\n      justify-content: start;\r\n      width: 80%;\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n      text-align: center;\r\n\r\n      .img__solbitHero {\r\n        width: ${({ width }) => (width >= 500 ? '90%' : '100%')};\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-top: 30px;\r\n        max-height: 150px;\r\n        max-width: 350px;\r\n      }\r\n\r\n      .text {\r\n        font-size: 15px;\r\n        font-weight: 700;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        margin-bottom: 10px;\r\n        width: ${({ width }) => (width >= 500 ? '70%' : '80%')};\r\n      }\r\n      .btn-soon {\r\n        margin-top: 10px;\r\n        background: #ff1948;\r\n        color: white;\r\n        width: 80%;\r\n        margin: 0 auto;\r\n        cursor: pointer;\r\n        outline: none;\r\n        padding: 10px 0px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n        white-space: nowrap;\r\n        border-radius: 10px;\r\n        width: ${({ width }) => (width >= 500 ? '60%' : '70%')};\r\n      }\r\n    }\r\n\r\n    .bottom {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .triple-images {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      align-items: flex-end;\r\n      overflow: hidden;\r\n      margin-bottom: ${({ width }) => (width >= 500 ? '-5%' : '-15%')};;\r\n      img {\r\n        width: 80px;\r\n        height: 170px;\r\n        z-index: 100;\r\n      }\r\n     \r\n    } //triple-images end\r\n    \r\n      }\r\n    }\r\n    //main content :end\r\n    .footer {\r\n      background: #000000;\r\n      color:white;\r\n\r\n       .flexsb{\r\n         display:flex;\r\n         align-items: center;\r\n         justify-content: space-around;\r\n         padding:3px 0px;\r\n      }\r\n\r\n      p {\r\n        font-size: 10px;\r\n        font-weight: 900;\r\n        font-style: italic;\r\n        z-index: 1000;\r\n      }\r\n\r\n      img {\r\n        width: 30%;\r\n        z-index:1000;\r\n  }\r\n\r\n   \r\n\r\n`\r\n","import React from 'react'\r\nimport { useWindowSize } from '../../hooks/useWindowSize'\r\nimport { MobileViewContent } from './MobileWelcome-style'\r\n\r\nconst MobileWelcome = () => {\r\n  const width = useWindowSize()\r\n  return (\r\n    <MobileViewContent width={width}>\r\n      <div className=\"flexsb\">\r\n        <img src=\"./img/1.png\" alt=\"cloud\" />\r\n        <img src=\"./img/2.png\" alt=\"cloud\" />\r\n      </div>\r\n      <div className=\"main__content\">\r\n        <div className=\"top__mobile\">\r\n          <img src=\"./img/SolbitHero.png\" alt=\"\" className=\"img__solbitHero\" />\r\n          <p className=\"text\">\r\n            There are 10,000 Solbit Heroes in our first collection that will be randomly generated during the minting process. Our universe is full of Solbit Heroes ready to believe in the good.\r\n          </p>\r\n          <button type=\"submit\" className=\"btn-soon\">\r\n            Launching November 18\r\n          </button>\r\n        </div>\r\n        <div className=\"bottom\">\r\n          <div className=\"triple-images\">\r\n            <img src=\"./img/Superman.png\" alt=\"Superman\" className=\"superman__image\" style={{ width: '100px', height: '180px' }} />\r\n            <img src=\"./img/Batman.png\" alt=\"batman\" className=\"batman__image\" style={{ transform: 'scaleX(-1)' }} />\r\n            <img src=\"./img/bar.png\" alt=\"bar\" />\r\n          </div>\r\n\r\n          <div className=\"flexsb\">\r\n            <img src=\"/img/3.png\" alt=\"\" />\r\n            <img src=\"/img/4.png\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"footer\">\r\n        <div className=\"flexsb\">\r\n          <p>NEW CHARACTERS EVERY WEEK!!</p>\r\n          <img src=\"/img/freePoster.png\" alt=\"Bar\" />\r\n        </div>\r\n      </footer>\r\n    </MobileViewContent>\r\n  )\r\n}\r\n\r\nexport default MobileWelcome\r\n","import styled from 'styled-components/macro'\r\n\r\nexport const WelcomeRelative90vh = styled.div<{ width: number }>`\r\n  position: relative;\r\n  background-color: #25f2c8;\r\n  height: calc(100vh - ${({ width }) => (width >= 992 ? '100px' : '50px')});\r\n  overflow-y: hidden;\r\n  .img__solbitHero {\r\n    width: 100%;\r\n    height: ${({ width }) => (width >= 992 ? '250px' : '200px')};\r\n\r\n    margin-top: 10px;\r\n  }\r\n  /* background-image: url('/img/bb.png');\r\n  background-repeat: no-repeat;\r\n  background-size: 100%;\r\n \r\n\r\n  &::before {\r\n    background-image: url('/img/rb.png');\r\n    position: absolute;\r\n    content: '';\r\n    background-size: 100%;\r\n    background-repeat: no-repeat;\r\n    width: 100%;\r\n    height: 100%;\r\n  } */\r\n`\r\n\r\nexport const TopContentRelative = styled.div`\r\n  height: 88%;\r\n  position: relative;\r\n\r\n  .top__left {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 20%;\r\n    height: 20%;\r\n  }\r\n\r\n  .top__right {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 20%;\r\n    height: 20%;\r\n  }\r\n\r\n  .bottom__left {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 20%;\r\n    height: 20%;\r\n  }\r\n\r\n  .bottom__right {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 20%;\r\n    height: 20%;\r\n  }\r\n`\r\nexport const MobileViewContent = styled.div`\r\n  @media (min-width: 992px) {\r\n    display: none;\r\n  }\r\n  height: 95%;\r\n  width: 70%;\r\n  padding-top: 3%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  .main__content {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .top__mobile {\r\n      height: 60%;\r\n      /* background-color: green; */\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      justify-content: space-between;\r\n\r\n      .text {\r\n        font-size: 15px;\r\n        font-weight: 700;\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    .bottom__mobile {\r\n      height: 40%;\r\n      background-color: red;\r\n    }\r\n  }\r\n`\r\nexport const ContentFlexXbetween = styled.div<{ width: number }>`\r\n  height: 95%;\r\n  width: 70%;\r\n  padding-top: 3%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media (max-width: 992px) {\r\n    display: none;\r\n  }\r\n  /* background: green; */\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  .img__batman {\r\n    flex: 0.4;\r\n    height: 55vh;\r\n    margin-left: 50px;\r\n    margin-right: 50px;\r\n    transform: scaleX(-1);\r\n  }\r\n  .img__superman {\r\n    flex: 0.3;\r\n    margin-right: -30px;\r\n    height: 60vh;\r\n  }\r\n\r\n  .centercontent {\r\n    align-self: flex-start;\r\n\r\n    p {\r\n      /* font-family: ComicSanItalic; */\r\n      font-weight: bold;\r\n      width: 90%;\r\n      text-align: left;\r\n      font-size: 20px;\r\n      margin: auto;\r\n    }\r\n\r\n    button {\r\n      margin-top: 10px;\r\n      background: #ff1948;\r\n      color: white;\r\n      width: 100%;\r\n      cursor: pointer;\r\n      outline: none;\r\n      padding: 20px 0px;\r\n      text-align: center;\r\n      font-size: 30px;\r\n      border-radius: 25px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const BottomFooter = styled.div<{ width: number }>`\r\n  height: 12%;\r\n`\r\n\r\nexport const InfoBottomFlexXbetween = styled.div`\r\n  height: 60%;\r\n  background-color: #000000;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: white;\r\n`\r\nexport const RedBottom = styled.div`\r\n  height: 40%;\r\n`\r\n","import React from 'react'\r\nimport { useWindowSize } from '../../hooks/useWindowSize'\r\nimport MobileWelcome from './MobileWelcome'\r\nimport { MobileViewContent, ContentFlexXbetween, TopContentRelative, WelcomeRelative90vh, BottomFooter } from './Welcome-styles'\r\n\r\nconst Welcome = () => {\r\n  const width = useWindowSize()\r\n\r\n  return width <= 992 ? (\r\n    <MobileWelcome />\r\n  ) : (\r\n    <WelcomeRelative90vh width={width}>\r\n      {/* 1)Top content section */}\r\n      <TopContentRelative>\r\n        {/* 1.1 all position images  at coner*/}\r\n        <img src=\"img/1.png\" alt=\"Cloude top left\" className=\"top__left\" />\r\n        <img src=\"img/2.png\" alt=\"Cloude top Right\" className=\"top__right\" />\r\n        <img src=\"img/3.png\" alt=\"Cloud buttom left\" className=\"bottom__left\" />\r\n        <img src=\"img/4.png\" alt=\"Cloud button Right\" className=\"bottom__right\" />\r\n        {/* 1.2 Center content */}\r\n        <ContentFlexXbetween width={width}>\r\n          <img src=\"img/Superman.png\" alt=\"\" className=\"img__leftRight img__superman\" />\r\n          <div className=\"centercontent\">\r\n            <img src=\"img/SolbitHero.png\" alt=\"SolbitHero\" className=\"img__solbitHero\" />\r\n            <p>\r\n              There are 10,000 Solbit Heroes in our first collection that will be randomly generated during the minting process. Our universe is full of Solbit Heroes ready to believe in the good.\r\n            </p>\r\n            <button>Launching November 18</button>\r\n          </div>\r\n          <img src=\"img/Batman.png\" alt=\"\" className=\"img__leftRight img__batman\" />\r\n        </ContentFlexXbetween>\r\n\r\n        <MobileViewContent>\r\n          <div className=\"main__content\">\r\n            <div className=\"top__mobile\">\r\n              <img src=\"./img/SolbitHero.png\" alt=\"\" className=\"img__solbitHero\" />\r\n              <p className=\"text\"></p>\r\n              <button type=\"submit\" className=\"btn-soon\"></button>\r\n            </div>\r\n            <div className=\"bottom-images\">\r\n              <img src=\"./img/Superman.png\" alt=\"Superman\" />\r\n              <img src=\"./img/Batman.png\" alt=\"batman\" />\r\n              <img src=\"./img/bar.png\" alt=\"bar\" />\r\n            </div>\r\n          </div>\r\n        </MobileViewContent>\r\n      </TopContentRelative>\r\n    </WelcomeRelative90vh>\r\n  )\r\n}\r\n\r\nexport default Welcome\r\n","import './App.css'\r\nimport Header from './components/Header/Header'\r\nimport Welcome from './components/Welcome.tsx/Welcome'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Welcome />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\r\nimport reportWebVitals from './reportWebVitals'\r\n// import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister()\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}